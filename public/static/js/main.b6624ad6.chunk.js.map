{"version":3,"sources":["api/CoinCap/Assets/Assets.ts","api/CoinCap/Exchanges/Exchanges.ts","Screens/HomeScreen.tsx","Screens/AssetsScreen.tsx","Screens/HistoryScreen.tsx","Screens/MarketsScreen.tsx","Screens/ExchangesScreen.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["Assets","assets","updateCount","baseUrl","this","update","bind","getAssets","parseAssets","undefined","console","log","coin","a","coins","url","axios","get","response","status","data","JSON","stringify","statusText","parsed","parse","newAssets","map","asset","rtn","history","rtnData","timestamp","e","Exchanges","exchanges","getExchanges","parseExchanges","HomeScreen","style","backgroundColor","minHeight","AssetsScreen","props","React","useState","notCollapsedRows","setNotCollapsedRows","idCount","getTdElement","str","endStr","val","Math","round","parseFloat","color","margin","padding","textAlign","alignItems","arr","getTrElement","item","index","id","newItemId","includes","push","className","onClick","row","rows","filter","toggleRow","name","symbol","priceUsd","length","changePercent24Hr","colSpan","Button","updateAssetsData","variant","Table","striped","bordered","hover","HistoryScreen","MarketsScreen","ExchangesScreen","exchangeId","volumeUsd","percentTotalVolume","updateExchangesData","App","setData","setAssets","exchangesData","setExchangesData","setExchanges","useEffect","styles","body","role","main","Container","fluid","Row","Col","sm","Navbar","bg","expand","header","position","Brand","textLogo","logoSymbol","logoText","Toggle","aria-controls","Collapse","Nav","headerItems","to","path","element","footer","height","paddingTop","marginLeft","marginBottom","marginTop","jumbotron","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","headerContainer","backgroundWidth","paddingLeft","paddingRight","width","lineHeight","borderRadius","fontSize","fontWeight","marginRight","paddingBottom","fontFamily","display","heaterItemLink","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6624ad6.chunk.js","sourcesContent":["import { Assets as AssetsType, History, Markets, FinalAssets } from \"./type\";\nimport axios from \"axios\";\n\n//import { ConvertAssets, Assets as AssetsType } from \"./ParseAssets\";\n\nexport class Assets {\n    assets?: FinalAssets.RootObject;\n    //history: History.RootObject;\n    //markets: Markets.RootObject;\n\n    updateCount: number;\n\n    baseUrl = \"https://crypto-web-projekti.herokuapp.com/assets.json\"; //\"https://api.coincap.io/v2\"; //\"https://api.saarinen.xyz/AssetsExampleData.json\";\n\n    constructor(assets?: FinalAssets.RootObject) {\n        this.update = this.update.bind(this);\n        this.getAssets = this.getAssets.bind(this);\n        this.parseAssets = this.parseAssets.bind(this);\n\n        this.updateCount = 0;\n\n        if (assets === undefined) {\n            this.update();\n        } else {\n            this.assets = assets;\n        }\n    }\n\n    update() {\n        this.updateCount++;\n        console.log(`${this.updateCount}. update`);\n        this.getAssets();\n    }\n\n    async getAssets(coin?: string) {\n        const coins = coin === undefined || coin === \"\";\n        /*const endfix = (coins) ? \"\" : \"/\"+coin;\n        const url = this.baseUrl; //`${this.baseUrl}/assets${endfix}`;*/\n        const url = this.baseUrl;//'http://localhost:3001/assets.json';\n\n        const response = await axios.get(url);\n        if (response.status === 200) {\n            const data = await response.data;\n            console.log(JSON.stringify(data));\n            console.log('(200): success')\n            this.parseAssets(data, coins);\n\n        } else { console.log(`status (${response.status}): ${response.statusText}`); }\n    }\n\n    parseAssets(data: any, coins: boolean) {\n        if (coins) {\n            try {\n                console.log(`data: ${data}`);\n                const parsed: AssetsType.RootObject = JSON.parse(JSON.stringify(data));\n                console.log('parsed ok');\n                const newAssets = parsed.data.map(asset => {\n                    let rtn: any = asset;\n                    rtn.history = [];\n                    return rtn;\n                });\n                console.log('newAssets ok');\n                const rtnData: FinalAssets.RootObject = { timestamp: parsed.timestamp, data: newAssets };\n                console.log('rtnData ok');\n                console.log(`rtnData: ${rtnData}`);\n                this.assets = rtnData;\n\n                //console.log(JSON.stringify(this.assets));\n\n                //const assets = ConvertAssets.toAssets(JSON.stringify(data));\n                //console.log(assets);\n            } catch (e) {\n                console.log(`Error while parsing JSON: ${e}`);\n            }\n        }\n    }\n\n}\n","import { Exchanges as ExchangesType } from \"./type\";\nimport axios from \"axios\";\n\nexport class Exchanges {\n    exchanges?: ExchangesType.RootObject;\n\n    updateCount: number;\n\n    baseUrl = \"https://crypto-web-projekti.herokuapp.com/exchanges.json\"; //\"https://api.coincap.io/v2\"; //\"https://api.saarinen.xyz/AssetsExampleData.json\";\n\n    constructor(exchanges?: ExchangesType.RootObject) {\n        this.update = this.update.bind(this);\n        this.getExchanges = this.getExchanges.bind(this);\n        this.parseExchanges = this.parseExchanges.bind(this);\n\n        this.updateCount = 0;\n\n        if (exchanges === undefined) {\n            this.update();\n        } else {\n            this.exchanges = exchanges;\n        }\n    }\n\n    update() {\n        this.updateCount++;\n        console.log(`${this.updateCount}. update`);\n        this.getExchanges();\n    }\n\n    async getExchanges() {\n        const url = this.baseUrl;//'http://localhost:3001/exchanges.json';\n\n        const response = await axios.get(url);\n        if (response.status === 200) {\n            const data = await response.data;\n            //console.log(JSON.stringify(data));\n            console.log('(200): success')\n            this.parseExchanges(data);\n\n        } else { console.log(`status (${response.status}): ${response.statusText}`); }\n    }\n\n    parseExchanges(data: any) {\n        try {\n            console.log(`data: ${data}`);\n            const parsed: ExchangesType.RootObject = JSON.parse(JSON.stringify(data));\n            console.log('parsed ok');\n            this.exchanges = parsed;\n\n        } catch (e) {\n            console.log(`Error while parsing JSON: ${e}`);\n        }\n    }\n\n}","import React from \"react\";\n\nexport default function HomeScreen() {\n\n    return (\n        <div style={{backgroundColor: \"#ffccffaa\", minHeight: \"320px\"}}>\n            <h1>Home</h1>\n        </div>\n    );\n}\n","import React from \"react\";\n\nimport { Table, Button } from \"react-bootstrap\";\n\nimport { Assets } from '../api/CoinCap/Assets/Assets';\nimport { FinalAssets } from \"../api/CoinCap/Assets/type\";\n\ninterface Props {\n    assets: FinalAssets.RootObject | undefined;\n    updateAssetsData: Function;\n}\n\nexport default function AssetsScreen(props: Props) {\n    /*let data = new Assets();\n    let [assets, setAssets] = React.useState<FinalAssets.RootObject>();\n\n    React.useEffect(() => {\n        setAssets(props.assets);\n    }, [props.assets]);*/\n\n    /*let [data, setData] = React.useState<Assets>(new Assets());\n    let [assets, setAssets] = React.useState<FinalAssets.RootObject>();\n\n    React.useEffect(() => {\n        console.log('useEffect (data.assets)');\n        setAssets(data.assets);\n    }, [data.assets]);*/\n\n    let [notCollapsedRows, setNotCollapsedRows] = React.useState<Array<string>>([]);\n\n    let idCount = 0;\n\n    const roundStrNumber = (str: string) => {\n        if (str?.length > 0 && str[0] === \"0\") {\n            return parseFloat(str);\n        } return Math.round(parseFloat(str) * 100) / 100;\n    }\n\n    const toggleRow = (row: string) => {\n        let rows: string[] = notCollapsedRows;\n        if (rows.includes(row)) {\n            setNotCollapsedRows(rows.filter(item => item !== row));\n        } else {\n            setNotCollapsedRows([...notCollapsedRows, row]);\n        }\n    }\n\n    const getCollapse = (id: string) => (notCollapsedRows.includes(id)) ? \"\" : \"collapse\";\n\n    const getTdElement = (str: string, endStr?: string) => {\n        const val = Math.round(parseFloat(str) * 100) / 100;\n        const color = (val === 0) ? \"\" : ((val < 0) ? \"red\" : \"green\");\n\n        return (\n            <td style={{margin: 0, padding: 0}}>\n                <div style={{backgroundColor: \"#212529\", margin: 0, padding: 0, textAlign: \"center\", alignItems: \"center\"}}>\n                    <span style={{color: color}}>{val}</span>{(endStr) ? \" \" + endStr : \"\"}\n                </div>\n            </td>\n        );\n    }\n\n    let arr: string[] = [];\n    const getTrElement = (item: FinalAssets.Asset, index: number) => {\n\n        if (index === 0) {\n            idCount = 0;\n            arr = [];\n        } else if (!(item.id === null || item.id === undefined)) {\n            idCount++;\n            const newItemId = `${idCount}-${index}`;\n            if (arr.includes(newItemId)) {\n                console.log(`DUBLICATE KEY! - ${newItemId}`);\n            }\n            arr.push(newItemId);\n        } else {\n            console.log(`idCount: ${idCount}, return <></>`);\n            return <></>;\n        }\n\n\n\n        return (\n            <>\n                <tr key={`${idCount}-${index}-asset_list_item-${item.id}`} className=\"clickable\" onClick={() => toggleRow(item.id)} >\n                    <td key={`${idCount}-${index}-asset_list_item-${item.id}_sub1`}>{idCount}</td>\n                    <td key={`${idCount}-${index}-asset_list_item-${item.id}_sub2`}>{item.name} ({item.symbol})</td>\n                    <td key={`${idCount}-${index}-asset_list_item-${item.id}_sub3`}>{roundStrNumber(item.priceUsd)}</td>\n                    {getTdElement(item.changePercent24Hr, \"%\")}\n                </tr>\n                <tr key={`${idCount}-${index}-asset_list_item-${item.id}-collapse`} className={getCollapse(item.id)}>\n                    <td key={`${idCount}-${index}-asset_list_item-${item.id}-collapse-sub1`} colSpan={4}>\n                        <div key={`${idCount}-${index}-asset_list_item-${item.id}-collapse-sub1-div`}>Click the row again to hide me</div>\n                    </td>\n                </tr>\n            </>\n        );\n    }\n\n    return (\n        <div style={{backgroundColor: \"#ffccffaa\"/*, minHeight: \"320px\"*/}}>\n            <h1>Assets</h1>\n            <Button onClick={() => props.updateAssetsData()} variant=\"primary\">Update</Button>\n            <br/><br/>\n            <Table striped bordered hover variant=\"dark\">\n                <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>Coin</th>\n                        <th>Value</th>\n                        <th>24h</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    { props.assets?.data.map((item: FinalAssets.Asset, index: number) => getTrElement(item, index)) }\n                    <tr key=\"asset_list_bitcoin_placeholder\">\n                        <td>1</td>\n                        <td>Bitcoin</td>\n                        <td>60000 $</td>\n                        <td>+1.4 %</td>\n                    </tr>\n                </tbody>\n            </Table>\n        </div>\n    );\n}\n","import React from \"react\";\n\nexport default function HistoryScreen() {\n\n    return (\n        <div style={{backgroundColor: \"#ffccffaa\", minHeight: \"320px\"}}>\n            <h1>History</h1>\n        </div>\n    );\n}\n","import React from \"react\";\n\nexport default function MarketsScreen() {\n\n    return (\n        <div style={{backgroundColor: \"#ffccffaa\", minHeight: \"320px\"}}>\n            <h1>Markets</h1>\n        </div>\n    );\n}\n","import React from \"react\";\n\nimport { Table, Button } from \"react-bootstrap\";\n\nimport { Exchanges as ExchangesType } from \"../api/CoinCap/Exchanges/type\";\n\ninterface Props {\n    exchanges: ExchangesType.RootObject | undefined;\n    updateExchangesData: Function;\n}\n\nexport default function ExchangesScreen(props: Props) {\n\n    let [notCollapsedRows, setNotCollapsedRows] = React.useState<Array<string>>([]);\n\n    let idCount = 0;\n\n    const roundStrNumber = (str: string) => {\n        if (str?.length > 0 && str[0] === \"0\") {\n            return parseFloat(str);\n        } return Math.round(parseFloat(str) * 100) / 100;\n    }\n\n    const toggleRow = (row: string) => {\n        let rows: string[] = notCollapsedRows;\n        if (rows.includes(row)) {\n            setNotCollapsedRows(rows.filter(item => item !== row));\n        } else {\n            setNotCollapsedRows([...notCollapsedRows, row]);\n        }\n    }\n\n    const getCollapse = (id: string) => (notCollapsedRows.includes(id)) ? \"\" : \"collapse\";\n\n    const getTdElement = (str: string, endStr?: string) => {\n        const val = Math.round(parseFloat(str) * 100) / 100;\n        const color = (val === 0) ? \"\" : ((val < 0) ? \"red\" : \"green\");\n\n        return (\n            <td style={{margin: 0, padding: 0}}>\n                <div style={{backgroundColor: \"#212529\", margin: 0, padding: 0, textAlign: \"center\", alignItems: \"center\"}}>\n                    <span style={{color: color}}>{val}</span>{(endStr) ? \" \" + endStr : \"\"}\n                </div>\n            </td>\n        );\n    }\n\n    const getTrElement = (item: ExchangesType.Datum, index: number) => {\n        /*\n        exchangeId: string;\n        name: string;\n        rank: string;\n        percentTotalVolume: string;\n        volumeUsd: string;\n        tradingPairs: string;\n        socket?: boolean;\n        exchangeUrl: string;\n        updated: any;\n        */\n\n        if (index === 0) {\n            idCount = 0;\n        } else if (!(item.exchangeId === null || item.exchangeId === undefined)) {\n            idCount++;\n        } else {\n            console.log(`idCount: ${idCount}, return <></>`);\n            return <></>;\n        }\n\n        return (\n            <>\n                <tr key={index} className=\"clickable\" onClick={() => toggleRow(item.exchangeId)} >\n                    <td>{idCount}</td>\n                    <td>{item.name}</td>\n                    <td>{roundStrNumber(item.volumeUsd)} $</td>\n                    {getTdElement(item.percentTotalVolume, \"%\")}\n                </tr>\n                <tr key={`${index}-collapse`} className={getCollapse(item.exchangeId)}>\n                    <td colSpan={4}>\n                        <div>Click the row again to hide me</div>\n                    </td>\n                </tr>\n            </>\n        );\n    }\n\n    return (\n        <div style={{backgroundColor: \"#ffccffaa\"}}>\n            <h1>Exchanges</h1>\n            <Button onClick={() => props.updateExchangesData()} variant=\"primary\">Update</Button>\n            <br/><br/>\n            <Table striped bordered hover variant=\"dark\">\n                <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>Name</th>\n                        <th>Volume</th>\n                        <th>Total Volume</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    { props.exchanges?.data.map((item: ExchangesType.Datum, index: number) => getTrElement(item, index)) }\n                    <tr key=\"bitcoin_placeholder\">\n                        <td>1</td>\n                        <td>Binance</td>\n                        <td>27770603778.97 $</td>\n                        <td>39.9 %</td>\n                    </tr>\n                </tbody>\n            </Table>\n        </div>\n    );\n}\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/js/src/collapse.js\";\n\nimport React from \"react\";\n\nimport { BrowserRouter as Router, Routes, Route, NavLink } from \"react-router-dom\";\n\nimport { Navbar, Container, Row, Col, Nav/*, NavLink*/ } from \"react-bootstrap\";\n\nimport { Assets } from './api/CoinCap/Assets/Assets';\nimport { FinalAssets } from \"./api/CoinCap/Assets/type\";\n\nimport { Exchanges } from \"./api/CoinCap/Exchanges/Exchanges\";\nimport { Exchanges as ExchangesType } from \"./api/CoinCap/Exchanges/type\";\n\nimport HomeScreen from \"./Screens/HomeScreen\";\nimport AssetsScreen from './Screens/AssetsScreen';\nimport HistoryScreen from \"./Screens/HistoryScreen\";\nimport MarketsScreen from \"./Screens/MarketsScreen\";\nimport ExchangesScreen from \"./Screens/ExchangesScreen\";\n\n//import headerBgColor from \"./bg_128-72-255-70.png\";\n\nfunction App() {\n  /*let data = new Assets();\n  let [assets, setAssets] = React.useState<FinalAssets.RootObject>();\n\n  React.useEffect(() => {\n      setAssets(data.assets);\n  }, [data.assets])*/\n\n  let [data, setData] = React.useState<Assets>(new Assets());\n  let [assets, setAssets] = React.useState<FinalAssets.RootObject>();\n\n  const updateAssets = () => setData(new Assets(data.assets));\n\n  let [exchangesData, setExchangesData] = React.useState<Exchanges>(new Exchanges());\n  let [exchanges, setExchanges] = React.useState<ExchangesType.RootObject>();\n\n  const updateExchanges = () => setExchangesData(new Exchanges(exchangesData.exchanges));\n\n  React.useEffect(() => {\n    console.log('useEffect (data.assets)');\n    setAssets(data.assets);\n  }, [data.assets]);\n\n  React.useEffect(() => {\n    console.log('useEffect (exchangesData.exchanges)');\n    setExchanges(exchangesData.exchanges);\n  }, [exchangesData.exchanges]);\n\n  return (\n    <div style={styles.body}>\n      <main role=\"main\" className=\"container-fluid\" style={styles.main}>\n        <Container fluid className=\"text-center\">\n          <Row>\n            <Col sm={1} />\n            <Col sm={10} >\n              <Router>\n                <Navbar className=\"navbar-inverse\" bg=\"dark\" variant=\"dark\" expand=\"lg\" style={styles.header}>\n                  {/*<div style={\n                    {\n                      //backgroundColor: \"rgba(128, 72, 255, 0.7)\",\n                      //backgroundImage: `url(${headerBgColor})`,\n                      //backgroundRepeat: \"repeat\",\n                      position: \"absolute\",\n                      width: \"100%\",\n                      height: \"100%\",\n                      margin: 0,\n                      paddingTop: \"13px\",\n                      paddingLeft: 0,//\"20px\",\n                      paddingBottom: \"13px\",\n                      paddingRight: 0,//\"20px\",\n\n                      /*borderTopLeftRadius: \"25px\",\n                      borderTopRightRadius: \"0px\",\n                      borderBottomLeftRadius: \"25px\",\n                      borderBottomRightRadius: \"0px\",* /\n                    }\n                  } >\n                    <div style={\n                      {\n                        backgroundColor: \"rgba(128, 72, 255, 0.7)\",\n                        position: \"relative\",\n                        width: \"100%\",\n                        height: \"100%\",\n                        /*borderTopLeftRadius: \"25px\",\n                        borderTopRightRadius: \"0px\",\n                        borderBottomLeftRadius: \"25px\",\n                        borderBottomRightRadius: \"0px\",* /\n                        //margin: 0\n                      }\n                    }/>\n                  </div>*/}\n                  <Container style={{position: \"relative\"}}>\n                    <Navbar.Brand>\n                      <Container style={styles.textLogo} id=\"text-logo\">\n                        <Row>\n                          <Col style={styles.logoSymbol} id=\"logo-symbol\">C</Col>\n                          <Col style={styles.logoText} id=\"logo-text\">rypto</Col>\n                        </Row>\n                      </Container>\n                    </Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                      <Nav className=\"mr-auto\" style={styles.headerItems}>\n                        <NavLink to={\"/\"} className=\"nav-link\">Home</NavLink>\n                        <NavLink to={\"/Assets\"} className=\"nav-link\">Assets</NavLink>\n                        <NavLink to={\"/History\"} className=\"nav-link\">History</NavLink>\n                        <NavLink to={\"/Markets\"} className=\"nav-link\">Markets</NavLink>\n                        <NavLink to={\"/Exchanges\"} className=\"nav-link\">Exchanges</NavLink>\n                      </Nav>\n                    </Navbar.Collapse>\n                  </Container>\n                </Navbar>\n                <Routes>\n                  <Route path=\"/\" element={<HomeScreen />} />\n                  <Route path=\"/Assets\" element={<AssetsScreen assets={assets} updateAssetsData={updateAssets/*data.update*/} />} />\n                  <Route path=\"/History\" element={<HistoryScreen />} />\n                  <Route path=\"/Markets\" element={<MarketsScreen />} />\n                  <Route path=\"/Exchanges\" element={<ExchangesScreen exchanges={exchanges} updateExchangesData={updateExchanges/*exchangesData.update*/} />} />\n                </Routes>\n\n              </Router>\n                  <footer id=\"sticky-footer\" className=\"site-footer clearfix py-2 bg-dark text-white-50 mr-auto\" style={styles.footer} > {/*\"py-2 bg-dark text-white-50\"*/}\n                    <Container className=\"text-center\">\n                      <small>Oskari Saarinen &copy; 2021</small>\n                    </Container>\n                  </footer>\n            </Col>\n            <Col sm={1} />\n          </Row>\n\n        </Container>\n\n      </main>\n    </div>\n  );\n\n  return (\n    <div className=\"App\">\n\n      <button onClick={data.update}>Update</button>\n\n      <Router>\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand>Crypto</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <NavLink to={\"/\"} className=\"nav-link\">HomeView</NavLink>\n              <NavLink to={\"/Assets\"} className=\"nav-link\">Assets</NavLink>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      <Routes>\n        <Route path=\"/\" element={<HomeScreen />} />\n        <Route path=\"/Assets\" element={<AssetsScreen assets={assets} updateAssetsData={data.update} />}/>\n      </Routes>\n\n    </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n\nconst styles = {\n  body: {\n    //backgroundColor: \"rgba(120, 40, 255, 0.1)\",\n    height: \"100%\",\n    paddingTop: 20\n  },\n  main: {\n    marginLeft: \"0px\",\n    marginBottom: \"40px\",\n    marginTop: \"0px\"\n  },\n  jumbotron: {\n    borderTopLeftRadius: \"0px\", //40px\n    borderTopRightRadius: \"0px\", //40px\n    borderBottomRightRadius: \"0px\",\n    borderBottomLeftRadius: \"0px\",\n    backgroundColor: \"rgba(255, 255, 255, 0.7)\",\n    marginBottom: \"0px\"\n  },\n  footer: {\n    //display: \"flex\",//\"block\",\n    //position: \"relative\",\n    borderTopLeftRadius: \"0px\",\n    borderTopRightRadius: \"0px\",\n    borderBottomLeftRadius: \"30px\",\n    borderBottomRightRadius: \"30px\",\n    marginTop: \"-16px\",\n    backgroundColor: \"rgba(200,200,200,0.2)\"\n  },\n  header: {\n    //display: \"flex\", //\"block\"\n    //position: \"relative\",\n    borderTopLeftRadius: \"40px\",\n    borderTopRightRadius: \"40px\",\n    borderBottomLeftRadius: \"0px\",\n    borderBottomRightRadius: \"0px\"\n  },\n  headerContainer: {\n    backgroundColor: \"rgba(128, 72, 255, 0.7)\",\n    marginLeft: \"8px\"\n\n  },\n  textLogo: {\n    //float: \"left\",\n    backgroundColor: \"rgba(128, 72, 255, 0.9)\",\n    height: \"44px\",//\"50px\", //\"66px\"\n    backgroundWidth: \"100%\",\n    borderTopLeftRadius: \"25px\",\n    borderTopRightRadius: \"0px\",\n    borderBottomLeftRadius: \"25px\",\n    borderBottomRightRadius: \"0px\",\n    paddingLeft: 0,\n    paddingRight: \"8px\"\n  },\n  logoSymbol: {\n    //float: \"left\",\n    width: \"44px\", /*OS: 56px*/\n    height: \"44px\", /*OS: 56px*/\n    lineHeight: \"44px\", /*OS: 56px*/\n    backgroundColor: \"#7066ff\",\n    borderRadius: \"100px\",\n    //textAlign: \"center\",\n    color: \"#fff\",\n    fontSize: \"28px\",\n    fontWeight: 800,\n    marginRight: \"-12px\",//\"8px\",\n    marginTop: 0,//\"3px\",\n    marginBottom: 0,//\"3px\",\n    marginLeft: \"8px\",\n    paddingTop: 0,\n    paddingBottom: 0,\n\n    fontFamily: \"Poppins, Helvetica, sans-serif\"\n  },\n  logoText: {\n    //float: \"left\",\n    lineHeight: \"50px\",//\"50px\", /*OS: 56px*/\n    fontSize: \"20px\",\n    color: \"#fff\",\n    fontWeight: 600,\n    display: \"block\",\n    marginLeft: \"-12px\",\n    marginBottom: \"-6px\",\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n  headerItems: {\n    lineHeight: \"50px\",\n    fontSize: \"18px\",\n    display: \"flex\",\n    //textAlign: \"center\",\n    paddingTop: 0, //\"3px\",\n    paddingBottom: 0, //\"3px\",\n    marginTop: 0,//\"3px\",\n    marginBottom: 0,//\"3px\",\n  },\n  heaterItemLink: {\n    backgroundColor: \"rgba(0, 0, 255, 0.5)\",\n    height: \"50px\",\n    lineHeight: \"50px\",\n    paddingTop: 0,\n    paddingBottom: 0,\n  }\n}\n/*\n<BrowserRouter>\n        <Routes>\n          <Route path=\"/\" element={<HomeScreen />}>\n            <Route index element={<HomeScreen />} />\n            <Route path=\"Assets\" element={<AssetsScreen />}>\n              {/*<Route path=\":teamId\" element={<HomeScreen />} />\n              <Route path=\"new\" element={<HomeScreen />} />\n              <Route index element={<HomeScreen />} />* /}\n            </Route>\n          </Route>\n        </Routes>\n      </BrowserRouter>\n      */","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.tsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}